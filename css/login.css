#content {
  text-align: center;
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
}
#box {
  width: calc(45vw + 34px);
  /*height: max-content/*202.2px*/;
  padding: 50px;
  padding-bottom: 40px;
  background-color: #00000080;
  border-radius: 20px;
  display: block;
}
#box input:not([type="checkbox"]) {
  font-size: 1.5rem;
  line-height: 2rem;
  height: 2rem;
  padding: 5px;
  margin: 10px 0px !important;
  border-width: 2px;
  background-color: transparent;
}
#box input:not([type="submit"]):not([type="checkbox"]) {
  width: 30vw;
  transition-duration: 750ms;
}
#box input:not([type="submit"]):not([type="checkbox"]):focus, #box input:not([type="submit"]):not([type="checkbox"]).focus {
  width: 45vw;
}
#box input[type="submit"] {
  margin-top: 15px !important;
  padding: 5px 15px;
  height: calc(2.3rem + 10px);
}
[data-err]::after {
  display: block;
  position: relative;
  left: 20px;
  bottom: 5px;
  width: 45vw;
  text-align: left;
}
#passwordContainer {
  white-space: nowrap;
}
#showPassContainer {
  width: 0px;
  display: inline-block;
  position: relative;
  right: 25px;
  top: calc(1.35em / 1.5);
  transform: translateY(-50%);
  height: 24px;
}
#showPass {
  transform: translateX(-100%);
  opacity: 0.5
}
#showPass:active {
  opacity: 1;
}
#loadingModal .modal-box {
  background-color: transparent;
}
#passwordRecovery {
  cursor: pointer;
}
#content.box {
  width: 350px;
  display: block;
}
@supports (width: max-content) {
  #showPass {
    width: max-content;
  }
}
@supports (width: -webkit-max-content) and (not (width: max-content)) {
  #showPass {
    width: -webkit-max-content;
  }
}
@supports not ((width: max-content) or (width: -webkit-max-content)) {
  #showPass {
    width: 24px;
  }
}
@supports (height: max-content) {
  #box {
    height: max-content;
  }
}
@supports (height: -webkit-max-content) and (not (height: max-content)) {
  #box {
    height: -webkit-max-content;
  }
}
@supports not ((height: max-content) or (height: -webkit-max-content)) {
  #box {
    height: initial;
  }
}