<!DOCTYPE html>
<html>
<head>
  <%- include("head", {beta: false, modal: false})%>
  <title>Shapes</title>
  <link rel="stylesheet" href="/css/hexTest.css">
  <link rel="stylesheet" href="/lib/highlightjs/styles/monokai-sublime.css">
  <script src="/js/color.js"></script>
  <script src="/lib/highlightjs/highlight.pack.js"></script>
  <script src="/js/hexTest.js" defer type="module"></script>
  <!--<script src="/lib/highlightjs/lib/languages/htmlbars.js"></script>
  <script src="/lib/highlightjs/lib/languages/javascript.js"></script>-->
</head>
<body>
  <%- include("header", {title: "Shapes", choice: true}) %>
  <div id="content">
    <canvas id="canvas" width="300" height="300">This program is not supported by your browser</canvas>
    <div id="menu">
      <div id="tabScrollHide">
        <div id="menuTabs">
          <div id="newShape" class="menuTab">&plus;</div>
          <div id="line"></div>
        </div>
      </div>
      <div id="mainMenu">
        <div id="mainMenuOptions">
          Position:
          <div class="indent">
            <div class="property">x: <input id="x" type="number" step required class="descrete"></div>
            <div class="property">y: <input id="y" type="number" required class="descrete"></div>
          </div>
          <div class="property">Width: <input id="widthT" type="number" required class="descrete" min="0" max="300"></div>
          <div class="indent">
            <input id="widthS" type="range" min="0" max="300">
          </div>
          <div id="rotations">
            Rotations:
            <div class="indent">
              <div class="property">
                x: 
                <input id="x-axis-rotation" type="number" step="1" class="descrete text" required min="0" max="360">
                <div class="radio"><input id="x-deg-radio" type="radio" name="x-axis-rotation-unit" value="deg"><label for="x-deg-radio">Degrees</label></div>
                <div class="radio"><input id="x-rad-radio" type="radio" name="x-axis-rotation-unit" value="rad"><label for="x-rad-radio">Radians</label></div>
              </div>
              <input id="x-axis-rotation-slider" class="indent" type="range" step="1" min="0" max="360">
              <div class="property">
                y:
                <input id="y-axis-rotation" type="number" step="1" class="descrete text" required min="0" max="360">
                <div class="radio"><input id="y-deg-radio" type="radio" name="y-axis-rotation-unit" value="deg"><label for="y-deg-radio">Degrees</label></div>
                <div class="radio"><input id="y-rad-radio" type="radio" name="y-axis-rotation-unit" value="rad"><label for="y-rad-radio">Radians</label></div>
              </div>
              <input id="y-axis-rotation-slider" class="indent" type="range" step="1" min="0" max="360">
              <div class="property">
                z:
                <input id="z-axis-rotation" type="number" step="1" class="descrete text" required min="0" max="360">
                <div class="radio"><input id="z-deg-radio" type="radio" name="z-axis-rotation-unit" value="deg"><label for="z-deg-radio">Degrees</label></div>
                <div class="radio"><input id="z-rad-radio" type="radio" name="z-axis-rotation-unit" value="rad"><label for="z-rad-radio">Radians</label></div>
              </div>
              <input id="z-axis-rotation-slider" class="indent" type="range" step="1" min="0" max="360">
            </div>
          </div>
        </div>
        <div id="bottom">
          <input type="button" id="delete" class="no" value="Discard">
          <input type="button" id="visibilityToggle" value="Hide">
        </div>
      </div>
      <div class="seperator"></div>
      <div id="colorMenu">
        Color:
        <div id="colorHSL">
          <div id="h" class="hslGrid">
            <input id="ht" type="number" required  class="descrete t" value="360"
              pattern="^(?:36[0]|3[0-5][0-9]|[12][0-9][0-9]|[1-9]?[0-9])?$">
            <div id="h-key" class="s">
              <input id="hs" type="range" value="0" min="0" max="360">
            </div>
          </div>
          <div id="s" class="hslGrid">
            <input id="st" type="number" required  class="descrete t" value="100" pattern="^[0-9][0-9]?$|^100$">
            <div id="s-key" class="s">
              <input id="ss" type="range" value="100" min="0" max="100">
            </div>
          </div>
          <div id="l" class="hslGrid">
            <input id="lt" type="number" required  class="descrete t" value="50" pattern="^[0-9][0-9]?$|^100$">
            <div id="l-key" class="s">
              <input id="ls" type="range" value="50" min="0" max="100">
            </div>
          </div>
        </div>
        <div id="colorHash">
          <input id="hexColor" value="ff0000" type="text" pattern="[\da-f]{0,6}">
        </div>
      </div>
      <div class="seperator"></div>
      <div id="spinMenu">
        <div id="spinMenuNoButton">
          Spin:<br>
          <div class="indent">
            <div>
              Axis:
              <select id="spin-axis">
                <option>x</option>
                <option>y</option>
                <option>z</option>
              </select>
            </div>
            <div class="property">
              Speed (rotations/minute): <input id="rpm" type="number" class="descrete">
            </div>
          </div>
          <br>
        </div>
        <input type="button" id="spin" class="yes" value="GO!">
      </div>
    </div>
  </div>
  <modal id="shapeCreationMenu" data-escape="okCancel" data-confirm="window.newShape(parseInt(document.getElementById('sidesInput').value))">
    Sides: <input type="number" id="sidesInput" min="3" step="1" value="4" required>
  </modal>
  <div id="documentation">
    <h2>How it works.</h2>
    This section explains the code that makes this work, and how you can use it in your own programs. If you are interested in this, you should keep reading. If, on the other hand, you don't care about the code, then you will probably find this uninteresting. So, with that out of the way, let's begin
    <h3>Importing Shapes.js</h3>
    This first section explains how to import the shapes class so you can use these shapes in your code. The easiest way to do it is with the ES6 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import">import statement</a>.
    <pre><code class="js">
      import { Shape } from "https://liambloom.herokuapp.com/lib/shapes.js";
    </code></pre>
    Be aware that the import statement is only avalable in javascript <i>modules</i>, meaning that your code will be in strict mode by default and that it must be imported like this:
    <pre><code class="html">
      &lt;srcipt src="/my/javascript.js" type="module">
    </code></pre>
    There is a way to import it without these downsides, using the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import#Dynamic_Imports">dynamic import</a>, but I don't recommend using this, as it is not as well supported.
    <h3>Making a shape</h3>
    Now that you have the shape constructor, creating a shape is as simple as calling the function. There are two parameters for the constructor. The first is sides, which is an integer that represents how many sides the shape should have, and config, which is an object which has all other information about the shape.
  </div>
</body>
</html>